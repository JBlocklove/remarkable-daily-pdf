#!/bin/sh

source ./functions

# Prints usage message
function print_help() {
	echo -e "Usage: rm-sync-pdf [OPTIONS]\n\tMandatory Options:\n\t\t-u: \t URL to pull pdf from.\n\t\t-n:\tName to give the downloaded pdf.\n\tOptional Options:\n\t\t-c:\tLocation of a cookie file. Necessary if authentication is required for the pdf.\n\t\t-d:\tDirectory on the remarkable to store the file under.\n\t\t\tIf any of the directories in the path don't exist they will be created.\n\t\t-h\tPrints this usage message and exits."
	exit 2
}

download_pdf() {
	#downloads the pdf requested by the -u flag

	new_uuid pdf_uuid
	if [[ $cookies ]]; then
		./wget $url \
			--header="Cookie: $cookies" \
			-O "$xochitl_loc/$pdf_uuid.pdf"
	else
		./wget $url \
			-O "$xochitl_loc/$pdf_uuid.pdf"
	fi

    echo "wget exit status: $?"

	if [[ $? != "0" ]]; then
		exit "$?"
	fi

	if [[ $dir ]]; then
		rm_mkdir "$dir"
		find_uuid $dir "dir" dir_uuid
	fi

	create_doc_metadata "$pdf_uuid" "$dir_uuid" "$name" "$xochitl_loc"
	create_doc_content "$pdf_uuid" "$xochitl_loc"
}

restart=false

while getopts 'u:c:n:d:hr' flag; do
	case "${flag}" in
		u)
			url="${OPTARG}" ;;
		c)
			cookie_file="${OPTARG}" ;;
		d)
			dir="${OPTARG}" ;;
		n)
			name="${OPTARG}" ;;
		h)
			print_help ;;
        r)
            restart=true ;;
		*)
			echo "$1 is not an option"
			print_help ;;
	esac
done

if [[ $url == "" ]]; then
	print_help
fi

if [[ $name ]]; then
	find_uuid $name "doc" pdf_uuid
fi

if [[ $cookie_file ]]; then
	cookies=`cat $cookie_file`
fi

if [[ $pdf_uuid == "" ]]; then
	echo "Downloading file"
	download_pdf
    if [[ $restart = true ]]; then
	    systemctl restart xochitl.service
    fi
else
	exit 0
fi
